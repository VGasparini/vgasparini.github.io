{"version":3,"sources":["logo.svg","serviceWorker.js","Cards/form.js","Cards/CardUI.jsx","Cards/Cards.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Form","props","react_default","a","createElement","className","class","for","type","placeholder","aria-label","aria-describedby","id","selected","value","min","Card","Cards_form","Cards","state","name","price","size","drink","CardUI","Component","ReactDOM","render","src_Cards_Cards","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6NCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wGCsCSC,SAtDF,SAAAC,GACT,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKE,MAAM,oBACTJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,uBACTJ,EAAAC,EAAAC,cAAA,SAAOE,MAAM,mBAAmBC,IAAI,aAApC,SAEFL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOF,MAAM,eAAeG,YAAY,wBAAwBC,aAAW,wBAAwBC,mBAAiB,kBAGlIT,EAAAC,EAAAC,cAAA,OAAKE,MAAM,oBACTJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,uBACTJ,EAAAC,EAAAC,cAAA,SAAOE,MAAM,mBAAmBC,IAAI,aAApC,SAEFL,EAAAC,EAAAC,cAAA,UAAQE,MAAM,gBAAgBM,GAAG,aAC/BV,EAAAC,EAAAC,cAAA,UAAQS,UAAQ,GAAhB,aACAX,EAAAC,EAAAC,cAAA,UAAQU,MAAM,MAAd,SACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,MAAd,SACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,MAAd,SACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,MAAd,SACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,MAAd,WAIJZ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,oBACTJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,uBACTJ,EAAAC,EAAAC,cAAA,QAAME,MAAM,oBAAZ,OAEFJ,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SAASF,MAAM,eAAeI,aAAW,SAASK,IAAI,MAClEb,EAAAC,EAAAC,cAAA,OAAKE,MAAM,sBACTJ,EAAAC,EAAAC,cAAA,QAAME,MAAM,oBAAZ,SAIJJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,2CACTJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,uBACTJ,EAAAC,EAAAC,cAAA,QAAME,MAAM,oBAAZ,oBAEFJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,oBACTJ,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWE,aAAW,+CAKxCR,EAAAC,EAAAC,cAAA,OAAKE,MAAM,2CACTJ,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASF,MAAM,wBAA5B,OACAJ,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASF,MAAM,uBAA5B,aCrCGU,EARF,SAAAf,GACT,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACa,EAAD,QCuBGC,6MA1BXC,MAAQ,CACJC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,MAAO,4EAIP,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACoB,EAAD,OAEJtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACoB,EAAD,OAEJtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACoB,EAAD,gBAnBJC,aCMpBC,IAASC,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,MAAUC,SAASC,eAAe,SJwH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c86798ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Form = props =>{\n    return(\n        <div className=\"jumbotron bg-light\">\n          <form>\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-prepend\">\n                <label class=\"input-group-text\" for=\"inputName\">Name</label>\n              </div>\n              <input type=\"text\" class=\"form-control\" placeholder=\"Pizzaria do Gasparini\" aria-label=\"Pizzaria do Gasparini\" aria-describedby=\"basic-addon1\"></input>\n            </div>\n\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-prepend\">\n                <label class=\"input-group-text\" for=\"inputSize\">Size</label>\n              </div>\n              <select class=\"custom-select\" id=\"inputSize\">\n                <option selected>Choose...</option>\n                <option value=\"30\">30 cm</option>\n                <option value=\"35\">35 cm</option>\n                <option value=\"40\">40 cm</option>\n                <option value=\"45\">45 cm</option>\n                <option value=\"50\">50 cm</option>\n              </select>\n            </div>\n\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">R$</span>\n              </div>\n              <input type=\"number\" class=\"form-control\" aria-label=\"Amount\" min=\"0\" ></input>\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\">.00</span>\n              </div>\n            </div>\n\n            <div class=\"input-group mb-3 justify-content-center\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">Drink included?</span>\n              </div>\n              <div class=\"input-group-text\">\n                <input type=\"checkbox\" aria-label=\"Checkbox and fill if have coke included\"></input>\n              </div>\n            </div>\n          </form>\n\n          <div class=\"input-group mb-2 justify-content-center\">\n            <button type=\"button\" class=\"btn btn-success mx-2\">Add</button>\n            <button type=\"button\" class=\"btn btn-danger mx-2\">Clear</button>\n          </div>\n\n        </div>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport './card-style.css';\nimport Form from './form'\n\nconst Card = props =>{\n    return(\n        <div className=\"card text-center\">\n            <Form />\n        </div>\n    );\n}\n\nexport default Card;","import React, {Component} from 'react';\nimport Card from './CardUI';\n\nclass Cards extends Component {\n    state = {\n        name: '',\n        price: '',\n        size: '',\n        drink: '',\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid d-flex justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card />\n                    </div>\n                    <div className=\"col\">\n                        <Card />\n                    </div>\n                    <div className=\"col\">\n                        <Card />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Cards;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport Card from './Cards/Cards';\n\nReactDOM.render(<Card />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}